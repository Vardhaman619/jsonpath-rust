WHITESPACE = _{ " " | "\t" | "\r\n" | "\n" | "\r"}

boolean = {"true" | "false"}
null = {"null"}

min = _{"-"}
col = _{":"}
dot =  _{ "." }
word = _{ ('a'..'z' | 'A'..'Z')+ }
specs = _{ "_" | "-" | "/" | "\\" | "#" }
number = @{"-"? ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*) ~ ("." ~ ASCII_DIGIT+)? ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?}

string_qt = ${ WHITESPACE? ~ ("\'" ~ inner ~ "\'") | ("\"" ~ inner ~ "\"") ~ WHITESPACE?}
inner = @{ char* }
char = _{
    !(
    "\"" | "\\" | "\'"
    | "\u{0000}" | "\u{0001}" | "\u{0002}" | "\u{0003}" | "\u{0004}" | "\u{0005}" | "\u{0006}" | "\u{0007}"
    | "\u{0008}" | "\u{0009}" | "\u{000A}" | "\u{000B}" | "\u{000C}" | "\u{000D}" | "\u{000E}" | "\u{000F}"
    | "\u{0010}" | "\u{0011}" | "\u{0012}" | "\u{0013}" | "\u{0014}" | "\u{0015}" | "\u{0016}" | "\u{0017}"
    | "\u{0018}" | "\u{0019}" | "\u{001A}" | "\u{001B}" | "\u{001C}" | "\u{001D}" | "\u{001E}" | "\u{001F}"
    | "\u{007F}"
    ) ~ ANY
    | "\\" ~ ("\"" | "\'" |  "\\" | "/" | "b" | "f" | "n" | "r" | "t" | "(" | ")")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}
root = {"$"}
sign = { "==" | "!=" | "~=" | ">=" | ">" | "<=" | "<" | "in" | "nin" | "size" | "noneOf" | "anyOf" | "subsetOf"}
not = {"!"}
key_lim = {!"length()" ~ (word | ASCII_DIGIT | specs)+}
key_unlim = {"["  ~ string_qt ~ WHITESPACE?~ "]"}
key = ${key_lim | key_unlim}

descent = {dot ~ dot ~ key}
descent_w = {dot ~ dot ~ "*"} // refactor afterwards
wildcard = {dot? ~ "[" ~"*"~"]" | dot ~ "*"}
current = {"@" ~ chain?}
field = ${dot? ~ key_unlim | dot ~ key_lim }
function = { dot ~ "length" ~ "(" ~ ")"}
unsigned = {("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)}
signed = {min? ~ unsigned}
start_slice = {signed}
end_slice = {signed}
step_slice = {col ~ signed?}
slice = {start_slice? ~ col ~ end_slice? ~ step_slice? }

unit_keys = { string_qt ~ ("," ~ string_qt)+ }
unit_indexes = { number ~ ("," ~ number)+  }
filter = {"?" ~ logic_or }

logic_or = {logic_and ~ ("||" ~ logic_and)*}
logic_and = {logic_not ~ ("&&" ~ logic_not)*}
logic_not = {not? ~ logic_atom}
logic_atom = {atom ~ (sign ~ atom)? | "(" ~ logic_or ~ ")"}

atom = {chain | string_qt | number | boolean | null}

index = {dot? ~ "["~ (unit_keys | unit_indexes | slice | unsigned |filter) ~ "]" }

chain = {(root | descent | descent_w | wildcard | current | field | index | function)+}

path = {SOI ~ chain ~ EOI }